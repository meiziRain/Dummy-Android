<?xml version="1.0" encoding="utf-8"?>

<!--好看的颜色-->
<!--  粉 light: #ffd9e6  darker: #edc7d4 -->
<!--  青 light: #adf7d3  darker: #9ee8c4 -->
<!--  青 light: #adf6ff  darker: #9ee7f0 -->

<resources>

    <!--  此处需要有actionBar,原因是系统生成的navigationBar需要设置，之前此处设置noActionBar，直接导致App崩溃不报错。-->
    <!-- Base application theme. -->
    <!--    Theme.AppCompat.DayNight
            Theme.AppCompat.DayNight.DarkActionBar
            为什么有区别->三点menu
    -->
    <style name="AppTheme" parent="Theme.AppCompat.DayNight">

        <item name="colorPrimary">@color/primary_dark</item>

        <!-- 让status bar透明，相当于statusBarColor=transparent + windowOverscan=true -->
        <!--        这个会导致标题栏脱离文档流-->
        <!--        <item name="android:windowTranslucentStatus">true</item>-->

        <!-- status bar color -->
        <item name="android:statusBarColor">@color/white</item>

        <!--    修改标题栏ActionBar文字颜色 ，背景色在Java代码中设置，原因是因为primaryColor与navigationBar不符-->
        <item name="actionBarStyle">@style/BlackTitle</item>


        <!--        三点菜单样式-->
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="BlackTitle" parent="@style/Widget.AppCompat.ActionBar.Solid">
        <item name="titleTextStyle">@style/BlackTitleStyle</item>
    </style>

    <style name="BlackTitleStyle" parent="@style/TextAppearance.AppCompat.Widget.ActionBar.Title">
        <item name="android:textColor">@color/black</item>
    </style>


    <style name="OverflowMenuStyle" parent="Widget.AppCompat.PopupMenu.Overflow">
                <!-- Api 21 -->
               
        <item name="overlapAnchor">false</item>
                <!-- 弹出层背景颜色 -->
        <!--                <item name="android:popupBackground">@color/action_bar_title_text_color</item>-->
        <!--                &lt;!&ndash; 设置弹出菜单文字颜色 &ndash;&gt;-->
        <!--                <item name="android:textColor">@color/message_text</item>-->
           
    </style>


    <!-- overflow弹出菜单内部的样式 -->
    <style name="Base.Widget.AppCompat.ListView.DropDown" parent="android:Widget.ListView">
        <!--        &lt;!&ndash; overflow弹出菜单内部，每个Item之间的分割线 &ndash;&gt;-->
        <!--        <item name="android:divider">@drawable/ic_divider</item>-->
        <!--        &lt;!&ndash; overflow弹出菜单内部，每个Item的selector &ndash;&gt;-->
        <!--        <item name="android:listSelector">@drawable/actionbar_item_selector</item>-->
    </style>

    <!-- overflow出菜单内部的每个Item的字体颜色与大小 -->
    <!--    无效果，但是出来了分割线-->
    <!--    <style name="Base.TextAppearance.AppCompat.Menu">-->
    <!--        <item name="android:textSize">16sp</item>-->
    <!--        <item name="android:textColor">@color/red</item>-->
    <!--        <item name="android:textAlignment">center</item>-->
    <!--    </style>-->

    <style name="AppTheme.Dark" parent="Theme.AppCompat.NoActionBar">
        <!-- 让status bar透明，相当于statusBarColor=transparent + windowOverscan=true -->
        <item name="android:windowTranslucentStatus">true</item>
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>

        <item name="android:windowContentTransitions">true</item>
        <item name="android:windowAllowEnterTransitionOverlap">true</item>
        <item name="android:windowAllowReturnTransitionOverlap">true</item>
        <item name="android:windowSharedElementEnterTransition">@android:transition/move</item>
        <item name="android:windowSharedElementExitTransition">@android:transition/move</item>

        <item name="colorPrimary">@color/primary</item>
        <item name="colorPrimaryDark">@color/primary_dark</item>
        <item name="colorAccent">@color/accent</item>


        <item name="android:windowBackground">@color/white</item>

        <!-- 应用的主要文字颜色,actionBar的标题文字默认使用该颜色 -->
        <item name="android:textColorPrimary">@color/accent</item>


        <!-- CheckBox,RadioButton,SwitchCompat等默认状态的颜色 -->
        <item name="colorControlNormal">@color/iron</item>
        <!-- 控件选中时的颜色,默认使用colorAccent -->
        <item name="colorControlActivated">@color/accent</item>

        <!-- 控件按压时的色调-->
        <item name="colorControlHighlight">@color/gray</item>

        <item name="android:textColorHint">@color/accent</item>


        <!-- 默认 Button,TextView的文字颜色 -->
        <item name="android:textColor">@color/white</item>
        <!-- 默认按钮的背景颜色 -->
        <item name="colorButtonNormal">@color/primary_darker</item>
        <item name="android:colorButtonNormal">@color/primary_darker</item>
    </style>

</resources>
